# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .model_environment_definition import ModelEnvironmentDefinition


class ModelOptimizationRequestEnvironment(ModelEnvironmentDefinition):
    """the optional environment which will be updated for deployment.

    :param name: The name of the environment.
    :type name: str
    :param version: The environment version.
    :type version: str
    :param python: Settings for a Python environment.
    :type python: ~_restclient.models.ModelEnvironmentDefinitionPython
    :param environment_variables: Definition of environment variables to be
     defined in the environment.
    :type environment_variables: dict[str, str]
    :param docker: The definition of a Docker container.
    :type docker: ~_restclient.models.ModelEnvironmentDefinitionDocker
    :param spark: The configuration for a Spark environment.
    :type spark: ~_restclient.models.ModelEnvironmentDefinitionSpark
    :param r: Settings for a R environment.
    :type r: ~_restclient.models.ModelEnvironmentDefinitionR
    :param inferencing_stack_version: The inferencing stack version added to
     the image. To avoid adding an inferencing stack, do not set this value.
     Valid values: "latest".
    :type inferencing_stack_version: str
    """

    def __init__(self, name=None, version=None, python=None, environment_variables=None, docker=None, spark=None, r=None, inferencing_stack_version=None):
        super(ModelOptimizationRequestEnvironment, self).__init__(name=name, version=version, python=python, environment_variables=environment_variables, docker=docker, spark=spark, r=r, inferencing_stack_version=inferencing_stack_version)
