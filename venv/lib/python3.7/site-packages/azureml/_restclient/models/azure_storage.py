# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AzureStorage(Model):
    """AzureStorage.

    :param account_name: Storage Account Name
    :type account_name: str
    :param container_name: The storage container name
    :type container_name: str
    :param endpoint: The host of the container
    :type endpoint: str
    :param protocol: The protocol to use. Defaults to https
    :type protocol: str
    :param credential_type: The credential type. Possible values include:
     'None', 'Sas', 'AccountKey', 'ClientCredentials'
    :type credential_type: str or
     ~_restclient.models.AzureStorageCredentialTypes
    :param credential: The credential
    :type credential: str
    :param client_credentials: Service principal credential when credential
     type is
     Microsoft.MachineLearning.DataStore.Contracts.AzureStorageCredentialTypes.ClientCredentials
    :type client_credentials: ~_restclient.models.ClientCredentials
    :param blob_cache_timeout: If this is an
     Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob, the
     length of time (in seconds) to cache files locally after they are accessed
     (downloaded).
    :type blob_cache_timeout: int
    :param is_sas: Indicate if we are using SAS token or Account Key
     (Deprecated)
    :type is_sas: bool
    :param account_key: Storage Account Key (Deprecated)
    :type account_key: str
    :param sas_token: SAS Token for the container (Deprecated)
    :type sas_token: str
    :param are_workspace_managed_identities_allowed: Indicate if we are using
     Workspace ManagedIdentities/MSI token
    :type are_workspace_managed_identities_allowed: bool
    :param subscription_id: Subscription Id
    :type subscription_id: str
    :param resource_group: Resource Group Name
    :type resource_group: str
    :param service_data_access_auth_identity: Indicates which identity to use
     to authenticate service data access to customer's storage. Possible values
     include: 'None', 'WorkspaceSystemAssignedIdentity',
     'WorkspaceUserAssignedIdentity'
    :type service_data_access_auth_identity: str or
     ~_restclient.models.ServiceDataAccessAuthIdentity
    """

    _attribute_map = {
        'account_name': {'key': 'accountName', 'type': 'str'},
        'container_name': {'key': 'containerName', 'type': 'str'},
        'endpoint': {'key': 'endpoint', 'type': 'str'},
        'protocol': {'key': 'protocol', 'type': 'str'},
        'credential_type': {'key': 'credentialType', 'type': 'AzureStorageCredentialTypes'},
        'credential': {'key': 'credential', 'type': 'str'},
        'client_credentials': {'key': 'clientCredentials', 'type': 'ClientCredentials'},
        'blob_cache_timeout': {'key': 'blobCacheTimeout', 'type': 'int'},
        'is_sas': {'key': 'isSas', 'type': 'bool'},
        'account_key': {'key': 'accountKey', 'type': 'str'},
        'sas_token': {'key': 'sasToken', 'type': 'str'},
        'are_workspace_managed_identities_allowed': {'key': 'areWorkspaceManagedIdentitiesAllowed', 'type': 'bool'},
        'subscription_id': {'key': 'subscriptionId', 'type': 'str'},
        'resource_group': {'key': 'resourceGroup', 'type': 'str'},
        'service_data_access_auth_identity': {'key': 'ServiceDataAccessAuthIdentity', 'type': 'ServiceDataAccessAuthIdentity'},
    }

    def __init__(self, account_name=None, container_name=None, endpoint=None, protocol=None, credential_type=None, credential=None, client_credentials=None, blob_cache_timeout=None, is_sas=None, account_key=None, sas_token=None, are_workspace_managed_identities_allowed=None, subscription_id=None, resource_group=None, service_data_access_auth_identity=None):
        super(AzureStorage, self).__init__()
        self.account_name = account_name
        self.container_name = container_name
        self.endpoint = endpoint
        self.protocol = protocol
        self.credential_type = credential_type
        self.credential = credential
        self.client_credentials = client_credentials
        self.blob_cache_timeout = blob_cache_timeout
        self.is_sas = is_sas
        self.account_key = account_key
        self.sas_token = sas_token
        self.are_workspace_managed_identities_allowed = are_workspace_managed_identities_allowed
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.service_data_access_auth_identity = service_data_access_auth_identity
