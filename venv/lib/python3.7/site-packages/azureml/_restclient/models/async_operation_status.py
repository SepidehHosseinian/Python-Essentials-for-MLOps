# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AsyncOperationStatus(Model):
    """The async operation status.

    :param id: The async operation id.
    :type id: str
    :param operation_type: The async operation type.
    :type operation_type: str
    :param state: The async operation state. Possible values include:
     'NotStarted', 'Running', 'Cancelled', 'Succeeded', 'Failed', 'TimedOut'
    :type state: str or ~_restclient.models.AsyncOperationState
    :param created_time: The async operation creation time (UTC).
    :type created_time: datetime
    :param end_time: The async operation end time (UTC)l
    :type end_time: datetime
    :param error: The error details.
    :type error: ~_restclient.models.AsyncOperationStatusError
    :param resource_location: The resource created/updated by the async
     operation.
    :type resource_location: str
    :param operation_log: The async operation log.
    :type operation_log: str
    :param operation_details: The async operation details.
    :type operation_details:
     ~_restclient.models.AsyncOperationStatusOperationDetails
    :param parent_request_id: The request id that created this operation
    :type parent_request_id: str
    :param operation_run_info: The async operation run information.
    :type operation_run_info:
     ~_restclient.models.AsyncOperationStatusOperationRunInfo
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'operation_type': {'key': 'operationType', 'type': 'str'},
        'state': {'key': 'state', 'type': 'AsyncOperationState'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'error': {'key': 'error', 'type': 'AsyncOperationStatusError'},
        'resource_location': {'key': 'resourceLocation', 'type': 'str'},
        'operation_log': {'key': 'operationLog', 'type': 'str'},
        'operation_details': {'key': 'operationDetails', 'type': 'AsyncOperationStatusOperationDetails'},
        'parent_request_id': {'key': 'parentRequestId', 'type': 'str'},
        'operation_run_info': {'key': 'operationRunInfo', 'type': 'AsyncOperationStatusOperationRunInfo'},
    }

    def __init__(self, id=None, operation_type=None, state=None, created_time=None, end_time=None, error=None, resource_location=None, operation_log=None, operation_details=None, parent_request_id=None, operation_run_info=None):
        super(AsyncOperationStatus, self).__init__()
        self.id = id
        self.operation_type = operation_type
        self.state = state
        self.created_time = created_time
        self.end_time = end_time
        self.error = error
        self.resource_location = resource_location
        self.operation_log = operation_log
        self.operation_details = operation_details
        self.parent_request_id = parent_request_id
        self.operation_run_info = operation_run_info
