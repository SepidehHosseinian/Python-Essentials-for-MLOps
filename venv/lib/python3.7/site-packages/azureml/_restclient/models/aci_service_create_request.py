# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .create_service_request import CreateServiceRequest


class ACIServiceCreateRequest(CreateServiceRequest):
    """ACIServiceCreateRequest.

    :param name: The service name.
    :type name: str
    :param description: The description of the service.
    :type description: str
    :param kv_tags: The service tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The service properties dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param keys: The authentication keys.
    :type keys: ~_restclient.models.CreateServiceRequestKeys
    :param image_id: The Image Id.
    :type image_id: str
    :param environment_image_request: The Environment, models and assets
     needed for inferencing.
    :type environment_image_request:
     ~_restclient.models.CreateServiceRequestEnvironmentImageRequest
    :param location: The location of the service.
    :type location: str
    :param overwrite: Whether to overwrite existing service if exists
    :type overwrite: bool
    :param deployed_api_options: Options for the API that the package exposes.
     Defaults to the standard AzureML REST server.
    :type deployed_api_options:
     ~_restclient.models.CreateServiceRequestDeployedApiOptions
    :param compute_type: Constant filled by server.
    :type compute_type: str
    :param container_resource_requirements: The container resource
     requirements.
    :type container_resource_requirements:
     ~_restclient.models.ACIServiceCreateRequestContainerResourceRequirements
    :param auth_enabled: Whether or not authentication is enabled on the
     service. Default value: False .
    :type auth_enabled: bool
    :param ssl_enabled: Whether or not SSL is enabled. Default value: False .
    :type ssl_enabled: bool
    :param app_insights_enabled: Whether or not Application Insights is
     enabled. Default value: False .
    :type app_insights_enabled: bool
    :param data_collection: Details of the data collection options specified.
    :type data_collection:
     ~_restclient.models.ACIServiceCreateRequestDataCollection
    :param ssl_certificate: The SSL certificate to use if SSL is enabled.
    :type ssl_certificate: str
    :param ssl_key: The SSL key for the certificate.
    :type ssl_key: str
    :param cname: The CName for the service.
    :type cname: str
    :param dns_name_label: The Dns label for the service.
    :type dns_name_label: str
    :param vnet_configuration: VnetConfiguration
    :type vnet_configuration:
     ~_restclient.models.ACIServiceCreateRequestVnetConfiguration
    :param encryption_properties: EncryptionProperties.
    :type encryption_properties:
     ~_restclient.models.ACIServiceCreateRequestEncryptionProperties
    """

    _validation = {
        'name': {'required': True},
        'compute_type': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'keys': {'key': 'keys', 'type': 'CreateServiceRequestKeys'},
        'image_id': {'key': 'imageId', 'type': 'str'},
        'environment_image_request': {'key': 'environmentImageRequest', 'type': 'CreateServiceRequestEnvironmentImageRequest'},
        'location': {'key': 'location', 'type': 'str'},
        'overwrite': {'key': 'overwrite', 'type': 'bool'},
        'deployed_api_options': {'key': 'deployedApiOptions', 'type': 'CreateServiceRequestDeployedApiOptions'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'container_resource_requirements': {'key': 'containerResourceRequirements', 'type': 'ACIServiceCreateRequestContainerResourceRequirements'},
        'auth_enabled': {'key': 'authEnabled', 'type': 'bool'},
        'ssl_enabled': {'key': 'sslEnabled', 'type': 'bool'},
        'app_insights_enabled': {'key': 'appInsightsEnabled', 'type': 'bool'},
        'data_collection': {'key': 'dataCollection', 'type': 'ACIServiceCreateRequestDataCollection'},
        'ssl_certificate': {'key': 'sslCertificate', 'type': 'str'},
        'ssl_key': {'key': 'sslKey', 'type': 'str'},
        'cname': {'key': 'cname', 'type': 'str'},
        'dns_name_label': {'key': 'dnsNameLabel', 'type': 'str'},
        'vnet_configuration': {'key': 'vnetConfiguration', 'type': 'ACIServiceCreateRequestVnetConfiguration'},
        'encryption_properties': {'key': 'encryptionProperties', 'type': 'ACIServiceCreateRequestEncryptionProperties'},
    }

    def __init__(self, name, description=None, kv_tags=None, properties=None, keys=None, image_id=None, environment_image_request=None, location=None, overwrite=None, deployed_api_options=None, container_resource_requirements=None, auth_enabled=False, ssl_enabled=False, app_insights_enabled=False, data_collection=None, ssl_certificate=None, ssl_key=None, cname=None, dns_name_label=None, vnet_configuration=None, encryption_properties=None):
        super(ACIServiceCreateRequest, self).__init__(name=name, description=description, kv_tags=kv_tags, properties=properties, keys=keys, image_id=image_id, environment_image_request=environment_image_request, location=location, overwrite=overwrite, deployed_api_options=deployed_api_options)
        self.container_resource_requirements = container_resource_requirements
        self.auth_enabled = auth_enabled
        self.ssl_enabled = ssl_enabled
        self.app_insights_enabled = app_insights_enabled
        self.data_collection = data_collection
        self.ssl_certificate = ssl_certificate
        self.ssl_key = ssl_key
        self.cname = cname
        self.dns_name_label = dns_name_label
        self.vnet_configuration = vnet_configuration
        self.encryption_properties = encryption_properties
        self.compute_type = 'ACI'
