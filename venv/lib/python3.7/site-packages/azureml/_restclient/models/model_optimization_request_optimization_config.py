# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .optimization_config import OptimizationConfig


class ModelOptimizationRequestOptimizationConfig(OptimizationConfig):
    """the optimization configuration.

    :param inputs_schema: The inputs schema used to convert and optimize
     model.
    :type inputs_schema: list[~_restclient.models.ModelSchema]
    :param outputs_schema: The outputs schema used to convert and optimize
     model.
    :type outputs_schema: list[~_restclient.models.ModelSchema]
    :param onnx_tuning_enabled: Whether enable the onnx performance tuning.
    :type onnx_tuning_enabled: bool
    :param model_path: The relative model file/folder path in the registered
     model artifacts.
    :type model_path: str
    :param sample_input_data: Sample Input Data for the Model. A reference to
     a dataset in the workspace in the format aml://dataset/{datasetId}
    :type sample_input_data: str
    :param framework: Constant filled by server.
    :type framework: str
    """

    _validation = {
        'onnx_tuning_enabled': {'required': True},
        'framework': {'required': True},
    }

    def __init__(self, onnx_tuning_enabled, inputs_schema=None, outputs_schema=None, model_path=None, sample_input_data=None):
        super(ModelOptimizationRequestOptimizationConfig, self).__init__(inputs_schema=inputs_schema, outputs_schema=outputs_schema, onnx_tuning_enabled=onnx_tuning_enabled, model_path=model_path, sample_input_data=sample_input_data)
        self.framework = 'ModelOptimizationRequest_optimizationConfig'
