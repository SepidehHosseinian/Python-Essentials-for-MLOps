# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Image(Model):
    """Image.

    :param id: The image id.
    :type id: str
    :param name: The image name.
    :type name: str
    :param version: The image version.
    :type version: int
    :param description: The image description.
    :type description: str
    :param tags: The list of image tags.
    :type tags: list[str]
    :param created_time: Time image was created.
    :type created_time: datetime
    :param image_type:
    :type image_type: str
    :param creation_state: Possible values include: 'NotStarted', 'Running',
     'Cancelled', 'Succeeded', 'Failed'
    :type creation_state: str or ~_restclient.models.enum
    :param error:
    :type error: ~_restclient.models.ModelErrorResponse
    :param model_ids:
    :type model_ids: list[str]
    :param model_details:
    :type model_details: list[~_restclient.models.Model]
    :param driver_program:
    :type driver_program: str
    :param assets:
    :type assets: list[~_restclient.models.ImageAsset]
    :param target_runtime:
    :type target_runtime: ~_restclient.models.TargetRuntime
    :param image_request_type_discriminator:
    :type image_request_type_discriminator: str
    """

    _validation = {
        'name': {'required': True},
        'image_request_type_discriminator': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'version': {'key': 'version', 'type': 'int'},
        'description': {'key': 'description', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '[str]'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'image_type': {'key': 'imageType', 'type': 'str'},
        'creation_state': {'key': 'creationState', 'type': 'str'},
        'error': {'key': 'error', 'type': 'ModelErrorResponse'},
        'model_ids': {'key': 'modelIds', 'type': '[str]'},
        'model_details': {'key': 'modelDetails', 'type': '[Model]'},
        'driver_program': {'key': 'driverProgram', 'type': 'str'},
        'assets': {'key': 'assets', 'type': '[ImageAsset]'},
        'target_runtime': {'key': 'targetRuntime', 'type': 'TargetRuntime'},
        'image_request_type_discriminator': {'key': 'imageRequestTypeDiscriminator', 'type': 'str'},
    }

    def __init__(self, name, image_request_type_discriminator, id=None, version=None, description=None, tags=None, created_time=None, image_type=None, creation_state=None, error=None, model_ids=None, model_details=None, driver_program=None, assets=None, target_runtime=None):
        super(Image, self).__init__()
        self.id = id
        self.name = name
        self.version = version
        self.description = description
        self.tags = tags
        self.created_time = created_time
        self.image_type = image_type
        self.creation_state = creation_state
        self.error = error
        self.model_ids = model_ids
        self.model_details = model_details
        self.driver_program = driver_program
        self.assets = assets
        self.target_runtime = target_runtime
        self.image_request_type_discriminator = image_request_type_discriminator
