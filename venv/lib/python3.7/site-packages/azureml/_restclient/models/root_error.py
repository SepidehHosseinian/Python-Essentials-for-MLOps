# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RootError(Model):
    """The root error.

    :param code: The service-defined error code. Supported error codes:
     ServiceError, UserError, ValidationError, AzureStorageError,
     TransientError, RequestThrottled.
    :type code: str
    :param severity: The Severity of error
    :type severity: int
    :param message: A human-readable representation of the error.
    :type message: str
    :param message_format: An unformatted version of the message with no
     variable substitution.
    :type message_format: str
    :param message_parameters: Value substitutions corresponding to the
     contents of MessageFormat.
    :type message_parameters: dict[str, str]
    :param reference_code: This code can optionally be set by the system
     generating the error.
     It should be used to classify the problem and identify the module and code
     area where the failure occured.
    :type reference_code: str
    :param details_uri: A URI which points to more details about the context
     of the error.
    :type details_uri: str
    :param target: The target of the error (e.g., the name of the property in
     error).
    :type target: str
    :param details: The related errors that occurred during the request.
    :type details: list[~_restclient.models.RootError]
    :param inner_error: A nested list of inner errors. When evaluating errors,
     clients MUST traverse through all of the nested "innerErrors" and choose
     the deepest one that they understand.
    :type inner_error: ~_restclient.models.InnerErrorResponse
    :param additional_info: The error additional info.
    :type additional_info: list[~_restclient.models.ErrorAdditionalInfo]
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'severity': {'key': 'severity', 'type': 'int'},
        'message': {'key': 'message', 'type': 'str'},
        'message_format': {'key': 'messageFormat', 'type': 'str'},
        'message_parameters': {'key': 'messageParameters', 'type': '{str}'},
        'reference_code': {'key': 'referenceCode', 'type': 'str'},
        'details_uri': {'key': 'detailsUri', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[RootError]'},
        'inner_error': {'key': 'innerError', 'type': 'InnerErrorResponse'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(self, code=None, severity=None, message=None, message_format=None, message_parameters=None, reference_code=None, details_uri=None, target=None, details=None, inner_error=None, additional_info=None):
        super(RootError, self).__init__()
        self.code = code
        self.severity = severity
        self.message = message
        self.message_format = message_format
        self.message_parameters = message_parameters
        self.reference_code = reference_code
        self.details_uri = details_uri
        self.target = target
        self.details = details
        self.inner_error = inner_error
        self.additional_info = additional_info
