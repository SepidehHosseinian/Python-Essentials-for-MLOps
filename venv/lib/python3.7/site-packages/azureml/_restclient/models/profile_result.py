# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ProfileResult(Model):
    """ProfileResult.

    :param column_name:
    :type column_name: str
    :param type: Possible values include: 'String', 'Boolean', 'Integer',
     'Decimal', 'Date', 'Unknown', 'Error', 'Null', 'DataRow', 'List', 'Stream'
    :type type: str or ~_restclient.models.enum
    :param min:
    :type min: ~_restclient.models.DataField
    :param max:
    :type max: ~_restclient.models.DataField
    :param count:
    :type count: long
    :param missing_count:
    :type missing_count: long
    :param not_missing_count:
    :type not_missing_count: long
    :param percent_missing:
    :type percent_missing: float
    :param error_count:
    :type error_count: long
    :param empty_count:
    :type empty_count: long
    :param quantiles:
    :type quantiles: ~_restclient.models.Quantiles
    :param whisker_top:
    :type whisker_top: float
    :param whisker_bottom:
    :type whisker_bottom: float
    :param moments:
    :type moments: ~_restclient.models.Moments
    :param type_counts:
    :type type_counts: list[~_restclient.models.TypeCount]
    :param value_counts:
    :type value_counts: list[~_restclient.models.ValueCount]
    :param unique_values:
    :type unique_values: long
    :param histogram:
    :type histogram: list[~_restclient.models.HistogramBin]
    :param s_type_counts:
    :type s_type_counts: list[~_restclient.models.STypeCount]
    :param average_spaces_count:
    :type average_spaces_count: float
    :param string_lengths:
    :type string_lengths: list[~_restclient.models.StringLengthCount]
    """

    _attribute_map = {
        'column_name': {'key': 'columnName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'min': {'key': 'min', 'type': 'DataField'},
        'max': {'key': 'max', 'type': 'DataField'},
        'count': {'key': 'count', 'type': 'long'},
        'missing_count': {'key': 'missingCount', 'type': 'long'},
        'not_missing_count': {'key': 'notMissingCount', 'type': 'long'},
        'percent_missing': {'key': 'percentMissing', 'type': 'float'},
        'error_count': {'key': 'errorCount', 'type': 'long'},
        'empty_count': {'key': 'emptyCount', 'type': 'long'},
        'quantiles': {'key': 'quantiles', 'type': 'Quantiles'},
        'whisker_top': {'key': 'whiskerTop', 'type': 'float'},
        'whisker_bottom': {'key': 'whiskerBottom', 'type': 'float'},
        'moments': {'key': 'moments', 'type': 'Moments'},
        'type_counts': {'key': 'typeCounts', 'type': '[TypeCount]'},
        'value_counts': {'key': 'valueCounts', 'type': '[ValueCount]'},
        'unique_values': {'key': 'uniqueValues', 'type': 'long'},
        'histogram': {'key': 'histogram', 'type': '[HistogramBin]'},
        's_type_counts': {'key': 'sTypeCounts', 'type': '[STypeCount]'},
        'average_spaces_count': {'key': 'averageSpacesCount', 'type': 'float'},
        'string_lengths': {'key': 'stringLengths', 'type': '[StringLengthCount]'},
    }

    def __init__(self, column_name=None, type=None, min=None, max=None, count=None, missing_count=None, not_missing_count=None, percent_missing=None, error_count=None, empty_count=None, quantiles=None, whisker_top=None, whisker_bottom=None, moments=None, type_counts=None, value_counts=None, unique_values=None, histogram=None, s_type_counts=None, average_spaces_count=None, string_lengths=None):
        super(ProfileResult, self).__init__()
        self.column_name = column_name
        self.type = type
        self.min = min
        self.max = max
        self.count = count
        self.missing_count = missing_count
        self.not_missing_count = not_missing_count
        self.percent_missing = percent_missing
        self.error_count = error_count
        self.empty_count = empty_count
        self.quantiles = quantiles
        self.whisker_top = whisker_top
        self.whisker_bottom = whisker_bottom
        self.moments = moments
        self.type_counts = type_counts
        self.value_counts = value_counts
        self.unique_values = unique_values
        self.histogram = histogram
        self.s_type_counts = s_type_counts
        self.average_spaces_count = average_spaces_count
        self.string_lengths = string_lengths
