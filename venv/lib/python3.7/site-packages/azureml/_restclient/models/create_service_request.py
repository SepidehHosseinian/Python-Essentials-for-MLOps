# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CreateServiceRequest(Model):
    """The base class for creating a service.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: ACIServiceCreateRequest, CreateEndpointRequest,
    CreateEndpointVariantRequest, CreateIotServiceRequest

    :param name: The service name.
    :type name: str
    :param description: The description of the service.
    :type description: str
    :param kv_tags: The service tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The service properties dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param keys: The authentication keys.
    :type keys: ~_restclient.models.CreateServiceRequestKeys
    :param image_id: The Image Id.
    :type image_id: str
    :param environment_image_request: The Environment, models and assets
     needed for inferencing.
    :type environment_image_request:
     ~_restclient.models.CreateServiceRequestEnvironmentImageRequest
    :param location: The location of the service.
    :type location: str
    :param overwrite: Whether to overwrite existing service if exists
    :type overwrite: bool
    :param deployed_api_options: Options for the API that the package exposes.
     Defaults to the standard AzureML REST server.
    :type deployed_api_options:
     ~_restclient.models.CreateServiceRequestDeployedApiOptions
    :param compute_type: Constant filled by server.
    :type compute_type: str
    """

    _validation = {
        'name': {'required': True},
        'compute_type': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'keys': {'key': 'keys', 'type': 'CreateServiceRequestKeys'},
        'image_id': {'key': 'imageId', 'type': 'str'},
        'environment_image_request': {'key': 'environmentImageRequest', 'type': 'CreateServiceRequestEnvironmentImageRequest'},
        'location': {'key': 'location', 'type': 'str'},
        'overwrite': {'key': 'overwrite', 'type': 'bool'},
        'deployed_api_options': {'key': 'deployedApiOptions', 'type': 'CreateServiceRequestDeployedApiOptions'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
    }

    _subtype_map = {
        'compute_type': {'ACI': 'ACIServiceCreateRequest', 'AKSENDPOINT': 'CreateEndpointRequest', 'Custom': 'CreateEndpointVariantRequest', 'IOT': 'CreateIotServiceRequest'}
    }

    def __init__(self, name, description=None, kv_tags=None, properties=None, keys=None, image_id=None, environment_image_request=None, location=None, overwrite=None, deployed_api_options=None):
        super(CreateServiceRequest, self).__init__()
        self.name = name
        self.description = description
        self.kv_tags = kv_tags
        self.properties = properties
        self.keys = keys
        self.image_id = image_id
        self.environment_image_request = environment_image_request
        self.location = location
        self.overwrite = overwrite
        self.deployed_api_options = deployed_api_options
        self.compute_type = None
