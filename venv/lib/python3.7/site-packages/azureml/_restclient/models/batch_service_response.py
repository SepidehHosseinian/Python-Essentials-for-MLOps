# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .service_response_base import ServiceResponseBase


class BatchServiceResponse(ServiceResponseBase):
    """BatchServiceResponse.

    :param id: The service Id.
    :type id: str
    :param name: The service name.
    :type name: str
    :param description: The service description.
    :type description: str
    :param kv_tags: The service tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The service property dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param operation_id: The ID of the latest asynchronous operation for this
     service.
    :type operation_id: str
    :param state: The current state of the service. Possible values include:
     'Transitioning', 'Healthy', 'Unhealthy', 'Failed', 'Unschedulable'
    :type state: str or ~_restclient.models.WebServiceState
    :param created_time: The time the service was created.
    :type created_time: datetime
    :param updated_time: The time the service was updated.
    :type updated_time: datetime
    :param error: The error details.
    :type error: ~_restclient.models.ServiceResponseBaseError
    :param deployment_type: The deployment type for the service. Possible
     values include: 'GRPCRealtimeEndpoint', 'HttpRealtimeEndpoint', 'Batch'
    :type deployment_type: str or ~_restclient.models.DeploymentType
    :param created_by: The individual last responsible for creating or
     updating the service.
    :type created_by: ~_restclient.models.ServiceResponseBaseCreatedBy
    :param compute_type: Constant filled by server.
    :type compute_type: str
    :param model_ids:
    :type model_ids: list[str]
    :param compute_name:
    :type compute_name: str
    :param environment_name:
    :type environment_name: str
    :param environment_version:
    :type environment_version: str
    :param scoring_uri:
    :type scoring_uri: str
    :param app_insights_enabled:
    :type app_insights_enabled: bool
    :param model_data_collection:
    :type model_data_collection:
     ~_restclient.models.BatchServiceResponseModelDataCollection
    :param entry_script:
    :type entry_script: str
    :param input_format:
    :type input_format: str
    :param output_action:
    :type output_action: str
    :param mini_batch_size:
    :type mini_batch_size: int
    :param error_threshold:
    :type error_threshold: float
    :param node_count:
    :type node_count: int
    :param process_count_per_node:
    :type process_count_per_node: int
    """

    _validation = {
        'compute_type': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'operation_id': {'key': 'operationId', 'type': 'str'},
        'state': {'key': 'state', 'type': 'WebServiceState'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'updated_time': {'key': 'updatedTime', 'type': 'iso-8601'},
        'error': {'key': 'error', 'type': 'ServiceResponseBaseError'},
        'deployment_type': {'key': 'deploymentType', 'type': 'DeploymentType'},
        'created_by': {'key': 'createdBy', 'type': 'ServiceResponseBaseCreatedBy'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'model_ids': {'key': 'modelIds', 'type': '[str]'},
        'compute_name': {'key': 'computeName', 'type': 'str'},
        'environment_name': {'key': 'environmentName', 'type': 'str'},
        'environment_version': {'key': 'environmentVersion', 'type': 'str'},
        'scoring_uri': {'key': 'scoringUri', 'type': 'str'},
        'app_insights_enabled': {'key': 'appInsightsEnabled', 'type': 'bool'},
        'model_data_collection': {'key': 'modelDataCollection', 'type': 'BatchServiceResponseModelDataCollection'},
        'entry_script': {'key': 'entryScript', 'type': 'str'},
        'input_format': {'key': 'inputFormat', 'type': 'str'},
        'output_action': {'key': 'outputAction', 'type': 'str'},
        'mini_batch_size': {'key': 'miniBatchSize', 'type': 'int'},
        'error_threshold': {'key': 'errorThreshold', 'type': 'float'},
        'node_count': {'key': 'nodeCount', 'type': 'int'},
        'process_count_per_node': {'key': 'processCountPerNode', 'type': 'int'},
    }

    def __init__(self, id=None, name=None, description=None, kv_tags=None, properties=None, operation_id=None, state=None, created_time=None, updated_time=None, error=None, deployment_type=None, created_by=None, model_ids=None, compute_name=None, environment_name=None, environment_version=None, scoring_uri=None, app_insights_enabled=None, model_data_collection=None, entry_script=None, input_format=None, output_action=None, mini_batch_size=None, error_threshold=None, node_count=None, process_count_per_node=None):
        super(BatchServiceResponse, self).__init__(id=id, name=name, description=description, kv_tags=kv_tags, properties=properties, operation_id=operation_id, state=state, created_time=created_time, updated_time=updated_time, error=error, deployment_type=deployment_type, created_by=created_by)
        self.model_ids = model_ids
        self.compute_name = compute_name
        self.environment_name = environment_name
        self.environment_version = environment_version
        self.scoring_uri = scoring_uri
        self.app_insights_enabled = app_insights_enabled
        self.model_data_collection = model_data_collection
        self.entry_script = entry_script
        self.input_format = input_format
        self.output_action = output_action
        self.mini_batch_size = mini_batch_size
        self.error_threshold = error_threshold
        self.node_count = node_count
        self.process_count_per_node = process_count_per_node
        self.compute_type = 'AMLCOMPUTE'
