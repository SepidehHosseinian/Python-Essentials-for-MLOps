# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MiroProxyInput(Model):
    """MiroProxyInput.

    :param iteration:
    :type iteration: int
    :param total_iterations:
    :type total_iterations: int
    :param run_algorithms:
    :type run_algorithms: list[str]
    :param run_preprocessors:
    :type run_preprocessors: list[str]
    :param iteration_numbers:
    :type iteration_numbers: list[int]
    :param metric_operation:
    :type metric_operation: str
    :param dynamic_whitelist_setting:
    :type dynamic_whitelist_setting:
     ~_restclient.models.DynamicWhitelistSettings
    :param trace_id:
    :type trace_id: str
    :param pipeline_ids:
    :type pipeline_ids: list[str]
    :param scores:
    :type scores: list[float]
    :param acquisition_function:
    :type acquisition_function: str
    :param acquisition_param:
    :type acquisition_param: float
    :param metric:
    :type metric: str
    :param max_cores_per_iteration:
    :type max_cores_per_iteration: int
    :param num_recommendations:
    :type num_recommendations: int
    :param time_constraint:
    :type time_constraint: float
    :param total_time_constraint:
    :type total_time_constraint: float
    :param max_time:
    :type max_time: float
    :param num_categorical:
    :type num_categorical: int
    :param num_features:
    :type num_features: int
    :param num_classes:
    :type num_classes: int
    :param num_samples:
    :type num_samples: int
    :param task:
    :type task: str
    :param predicted_times:
    :type predicted_times: list[float]
    :param actual_times:
    :type actual_times: list[float]
    :param training_percents:
    :type training_percents: list[float]
    :param cost_mode:
    :type cost_mode: int
    :param is_sparse_data:
    :type is_sparse_data: bool
    :param model_names_whitelisted:
    :type model_names_whitelisted: list[str]
    :param model_names_blacklisted:
    :type model_names_blacklisted: list[str]
    :param subsampling:
    :type subsampling: bool
    """

    _attribute_map = {
        'iteration': {'key': 'iteration', 'type': 'int'},
        'total_iterations': {'key': 'total_iterations', 'type': 'int'},
        'run_algorithms': {'key': 'run_algorithms', 'type': '[str]'},
        'run_preprocessors': {'key': 'run_preprocessors', 'type': '[str]'},
        'iteration_numbers': {'key': 'iteration_numbers', 'type': '[int]'},
        'metric_operation': {'key': 'metric_operation', 'type': 'str'},
        'dynamic_whitelist_setting': {'key': 'dynamic_whitelist_setting', 'type': 'DynamicWhitelistSettings'},
        'trace_id': {'key': 'trace_id', 'type': 'str'},
        'pipeline_ids': {'key': 'pipeline_ids', 'type': '[str]'},
        'scores': {'key': 'scores', 'type': '[float]'},
        'acquisition_function': {'key': 'acquisition_function', 'type': 'str'},
        'acquisition_param': {'key': 'acquisition_param', 'type': 'float'},
        'metric': {'key': 'metric', 'type': 'str'},
        'max_cores_per_iteration': {'key': 'max_cores_per_iteration', 'type': 'int'},
        'num_recommendations': {'key': 'num_recommendations', 'type': 'int'},
        'time_constraint': {'key': 'time_constraint', 'type': 'float'},
        'total_time_constraint': {'key': 'total_time_constraint', 'type': 'float'},
        'max_time': {'key': 'max_time', 'type': 'float'},
        'num_categorical': {'key': 'num_categorical', 'type': 'int'},
        'num_features': {'key': 'num_features', 'type': 'int'},
        'num_classes': {'key': 'num_classes', 'type': 'int'},
        'num_samples': {'key': 'num_samples', 'type': 'int'},
        'task': {'key': 'task', 'type': 'str'},
        'predicted_times': {'key': 'predicted_times', 'type': '[float]'},
        'actual_times': {'key': 'actual_times', 'type': '[float]'},
        'training_percents': {'key': 'training_percents', 'type': '[float]'},
        'cost_mode': {'key': 'cost_mode', 'type': 'int'},
        'is_sparse_data': {'key': 'is_sparse_data', 'type': 'bool'},
        'model_names_whitelisted': {'key': 'model_names_whitelisted', 'type': '[str]'},
        'model_names_blacklisted': {'key': 'model_names_blacklisted', 'type': '[str]'},
        'subsampling': {'key': 'subsampling', 'type': 'bool'},
    }

    def __init__(self, iteration=None, total_iterations=None, run_algorithms=None, run_preprocessors=None, iteration_numbers=None, metric_operation=None, dynamic_whitelist_setting=None, trace_id=None, pipeline_ids=None, scores=None, acquisition_function=None, acquisition_param=None, metric=None, max_cores_per_iteration=None, num_recommendations=None, time_constraint=None, total_time_constraint=None, max_time=None, num_categorical=None, num_features=None, num_classes=None, num_samples=None, task=None, predicted_times=None, actual_times=None, training_percents=None, cost_mode=None, is_sparse_data=None, model_names_whitelisted=None, model_names_blacklisted=None, subsampling=None):
        super(MiroProxyInput, self).__init__()
        self.iteration = iteration
        self.total_iterations = total_iterations
        self.run_algorithms = run_algorithms
        self.run_preprocessors = run_preprocessors
        self.iteration_numbers = iteration_numbers
        self.metric_operation = metric_operation
        self.dynamic_whitelist_setting = dynamic_whitelist_setting
        self.trace_id = trace_id
        self.pipeline_ids = pipeline_ids
        self.scores = scores
        self.acquisition_function = acquisition_function
        self.acquisition_param = acquisition_param
        self.metric = metric
        self.max_cores_per_iteration = max_cores_per_iteration
        self.num_recommendations = num_recommendations
        self.time_constraint = time_constraint
        self.total_time_constraint = total_time_constraint
        self.max_time = max_time
        self.num_categorical = num_categorical
        self.num_features = num_features
        self.num_classes = num_classes
        self.num_samples = num_samples
        self.task = task
        self.predicted_times = predicted_times
        self.actual_times = actual_times
        self.training_percents = training_percents
        self.cost_mode = cost_mode
        self.is_sparse_data = is_sparse_data
        self.model_names_whitelisted = model_names_whitelisted
        self.model_names_blacklisted = model_names_blacklisted
        self.subsampling = subsampling
