# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ParallelTaskConfiguration(Model):
    """A class to manage parallel task settings for the submitted job.

    :param max_retries_per_worker: Retry policy. Default 0.
    :type max_retries_per_worker: int
    :param worker_count_per_node: Worker count per node. Default 1.
    :type worker_count_per_node: int
    :param terminal_exit_codes: Worker code exit value that will terminate the
     job.
    :type terminal_exit_codes: list[int]
    :param configuration:
    :type configuration: dict[str, str]
    """

    _attribute_map = {
        'max_retries_per_worker': {'key': 'maxRetriesPerWorker', 'type': 'int'},
        'worker_count_per_node': {'key': 'workerCountPerNode', 'type': 'int'},
        'terminal_exit_codes': {'key': 'terminalExitCodes', 'type': '[int]'},
        'configuration': {'key': 'configuration', 'type': '{str}'},
    }

    def __init__(self, max_retries_per_worker=None, worker_count_per_node=None, terminal_exit_codes=None, configuration=None):
        super(ParallelTaskConfiguration, self).__init__()
        self.max_retries_per_worker = max_retries_per_worker
        self.worker_count_per_node = worker_count_per_node
        self.terminal_exit_codes = terminal_exit_codes
        self.configuration = configuration
