# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ServiceCreateRequest(Model):
    """ServiceCreateRequest.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: AKSServiceCreateRequest

    :param name: The service name.
    :type name: str
    :param description: The description of the service.
    :type description: str
    :param tags: Service tag list
    :type tags: list[str]
    :param kv_tags: Service tag dictionary
    :type kv_tags: dict[str, str]
    :param properties: Service property dictionary
    :type properties: dict[str, str]
    :param compute_type: The compute environment type for the service.
     Possible values include: 'ACI', 'BATCH', 'AKS', 'FPGA'
    :type compute_type: str or ~_restclient.models.enum
    :param service_create_request_type_discriminator: Constant filled by
     server.
    :type service_create_request_type_discriminator: str
    """

    _validation = {
        'name': {'required': True},
        'compute_type': {'required': True},
        'service_create_request_type_discriminator': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '[str]'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'service_create_request_type_discriminator': {'key': 'serviceCreateRequestTypeDiscriminator', 'type': 'str'},
    }

    _subtype_map = {
        'service_create_request_type_discriminator': {'AKSServiceCreateRequest': 'AKSServiceCreateRequest'}
    }

    def __init__(self, name, compute_type, description=None, tags=None, kv_tags=None, properties=None):
        super(ServiceCreateRequest, self).__init__()
        self.name = name
        self.description = description
        self.tags = tags
        self.kv_tags = kv_tags
        self.properties = properties
        self.compute_type = compute_type
        self.service_create_request_type_discriminator = None
