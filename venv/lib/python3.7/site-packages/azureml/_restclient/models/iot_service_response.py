# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .service_response_base import ServiceResponseBase


class IotServiceResponse(ServiceResponseBase):
    """IotServiceResponse.

    :param id: The service Id.
    :type id: str
    :param name: The service name.
    :type name: str
    :param description: The service description.
    :type description: str
    :param kv_tags: The service tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The service property dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param operation_id: The ID of the latest asynchronous operation for this
     service.
    :type operation_id: str
    :param state: The current state of the service. Possible values include:
     'Transitioning', 'Healthy', 'Unhealthy', 'Failed', 'Unschedulable'
    :type state: str or ~_restclient.models.WebServiceState
    :param created_time: The time the service was created.
    :type created_time: datetime
    :param updated_time: The time the service was updated.
    :type updated_time: datetime
    :param error: The error details.
    :type error: ~_restclient.models.ServiceResponseBaseError
    :param deployment_type: The deployment type for the service. Possible
     values include: 'GRPCRealtimeEndpoint', 'HttpRealtimeEndpoint', 'Batch'
    :type deployment_type: str or ~_restclient.models.DeploymentType
    :param created_by: The individual last responsible for creating or
     updating the service.
    :type created_by: ~_restclient.models.ServiceResponseBaseCreatedBy
    :param compute_type: Constant filled by server.
    :type compute_type: str
    :param iot_device_id:
    :type iot_device_id: str
    :param routes:
    :type routes: dict[str, str]
    :param compute_name:
    :type compute_name: str
    :param iot_edge_modules:
    :type iot_edge_modules: list[~_restclient.models.IotModuleSettings]
    :param auth_enabled:
    :type auth_enabled: bool
    :param image_details:
    :type image_details: ~_restclient.models.IotServiceResponseImageDetails
    :param image_id:
    :type image_id: str
    :param image_digest:
    :type image_digest: str
    """

    _validation = {
        'compute_type': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'operation_id': {'key': 'operationId', 'type': 'str'},
        'state': {'key': 'state', 'type': 'WebServiceState'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'updated_time': {'key': 'updatedTime', 'type': 'iso-8601'},
        'error': {'key': 'error', 'type': 'ServiceResponseBaseError'},
        'deployment_type': {'key': 'deploymentType', 'type': 'DeploymentType'},
        'created_by': {'key': 'createdBy', 'type': 'ServiceResponseBaseCreatedBy'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'iot_device_id': {'key': 'iotDeviceId', 'type': 'str'},
        'routes': {'key': 'routes', 'type': '{str}'},
        'compute_name': {'key': 'computeName', 'type': 'str'},
        'iot_edge_modules': {'key': 'iotEdgeModules', 'type': '[IotModuleSettings]'},
        'auth_enabled': {'key': 'authEnabled', 'type': 'bool'},
        'image_details': {'key': 'imageDetails', 'type': 'IotServiceResponseImageDetails'},
        'image_id': {'key': 'imageId', 'type': 'str'},
        'image_digest': {'key': 'imageDigest', 'type': 'str'},
    }

    def __init__(self, id=None, name=None, description=None, kv_tags=None, properties=None, operation_id=None, state=None, created_time=None, updated_time=None, error=None, deployment_type=None, created_by=None, iot_device_id=None, routes=None, compute_name=None, iot_edge_modules=None, auth_enabled=None, image_details=None, image_id=None, image_digest=None):
        super(IotServiceResponse, self).__init__(id=id, name=name, description=description, kv_tags=kv_tags, properties=properties, operation_id=operation_id, state=state, created_time=created_time, updated_time=updated_time, error=error, deployment_type=deployment_type, created_by=created_by)
        self.iot_device_id = iot_device_id
        self.routes = routes
        self.compute_name = compute_name
        self.iot_edge_modules = iot_edge_modules
        self.auth_enabled = auth_enabled
        self.image_details = image_details
        self.image_id = image_id
        self.image_digest = image_digest
        self.compute_type = 'IOT'
