# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DatasetRequestDto(Model):
    """DatasetRequestDto.

    :param data_path:
    :type data_path: ~_restclient.models.DataPathDto
    :param excel:
    :type excel: ~_restclient.models.ExcelSection
    :param json:
    :type json: ~_restclient.models.JsonSection
    :param json_lines:
    :type json_lines: ~_restclient.models.JsonLinesSection
    :param general:
    :type general: ~_restclient.models.GeneralSection
    :param purpose:
    :type purpose: ~_restclient.models.PurposeSection
    :param source_properties:
    :type source_properties: ~_restclient.models.DataSourceProperties
    :param columns_to_remove:
    :type columns_to_remove: list[str]
    :param schema:
    :type schema: list[~_restclient.models.ColumnType]
    :param notes:
    :type notes: str
    :param open_datasets_section:
    :type open_datasets_section: ~_restclient.models.OpenDatasetsRequestDto
    :param name:
    :type name: str
    :param description:
    :type description: str
    :param tags:
    :type tags: dict[str, str]
    :param is_visible:
    :type is_visible: bool
    :param default_compute:
    :type default_compute: str
    :param dataset_type:
    :type dataset_type: str
    """

    _attribute_map = {
        'data_path': {'key': 'dataPath', 'type': 'DataPathDto'},
        'excel': {'key': 'excel', 'type': 'ExcelSection'},
        'json': {'key': 'json', 'type': 'JsonSection'},
        'json_lines': {'key': 'jsonLines', 'type': 'JsonLinesSection'},
        'general': {'key': 'general', 'type': 'GeneralSection'},
        'purpose': {'key': 'purpose', 'type': 'PurposeSection'},
        'source_properties': {'key': 'sourceProperties', 'type': 'DataSourceProperties'},
        'columns_to_remove': {'key': 'columnsToRemove', 'type': '[str]'},
        'schema': {'key': 'schema', 'type': '[ColumnType]'},
        'notes': {'key': 'notes', 'type': 'str'},
        'open_datasets_section': {'key': 'openDatasetsSection', 'type': 'OpenDatasetsRequestDto'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'is_visible': {'key': 'isVisible', 'type': 'bool'},
        'default_compute': {'key': 'defaultCompute', 'type': 'str'},
        'dataset_type': {'key': 'datasetType', 'type': 'str'},
    }

    def __init__(self, data_path=None, excel=None, json=None, json_lines=None, general=None, purpose=None, source_properties=None, columns_to_remove=None, schema=None, notes=None, open_datasets_section=None, name=None, description=None, tags=None, is_visible=None, default_compute=None, dataset_type=None):
        super(DatasetRequestDto, self).__init__()
        self.data_path = data_path
        self.excel = excel
        self.json = json
        self.json_lines = json_lines
        self.general = general
        self.purpose = purpose
        self.source_properties = source_properties
        self.columns_to_remove = columns_to_remove
        self.schema = schema
        self.notes = notes
        self.open_datasets_section = open_datasets_section
        self.name = name
        self.description = description
        self.tags = tags
        self.is_visible = is_visible
        self.default_compute = default_compute
        self.dataset_type = dataset_type
