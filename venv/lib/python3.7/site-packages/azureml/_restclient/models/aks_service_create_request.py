# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .create_endpoint_variant_request import CreateEndpointVariantRequest


class AKSServiceCreateRequest(CreateEndpointVariantRequest):
    """The request to create an AKS service.

    :param name: The service name.
    :type name: str
    :param description: The description of the service.
    :type description: str
    :param kv_tags: The service tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The service properties dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param keys: The authentication keys.
    :type keys: ~_restclient.models.CreateServiceRequestKeys
    :param image_id: The Image Id.
    :type image_id: str
    :param environment_image_request: The Environment, models and assets
     needed for inferencing.
    :type environment_image_request:
     ~_restclient.models.CreateServiceRequestEnvironmentImageRequest
    :param location: The location of the service.
    :type location: str
    :param overwrite: Whether to overwrite existing service if exists
    :type overwrite: bool
    :param deployed_api_options: Options for the API that the package exposes.
     Defaults to the standard AzureML REST server.
    :type deployed_api_options:
     ~_restclient.models.CreateServiceRequestDeployedApiOptions
    :param compute_type: Constant filled by server.
    :type compute_type: str
    :param is_default: Is this the default variant.
    :type is_default: bool
    :param traffic_percentile: The amount of traffic variant receives.
    :type traffic_percentile: float
    :param type: The type of the variant. Possible values include: 'Control',
     'Treatment'
    :type type: str or ~_restclient.models.VariantType
    :param num_replicas: The number of replicas on the cluster.
    :type num_replicas: int
    :param data_collection: Details of the data collection options specified.
    :type data_collection:
     ~_restclient.models.AKSServiceCreateRequestDataCollection
    :param compute_name: The name of the compute resource.
    :type compute_name: str
    :param app_insights_enabled: Whether or not Application Insights is
     enabled.
    :type app_insights_enabled: bool
    :param auto_scaler: The auto scaler properties.
    :type auto_scaler: ~_restclient.models.AKSServiceCreateRequestAutoScaler
    :param container_resource_requirements: The container resource
     requirements.
    :type container_resource_requirements:
     ~_restclient.models.AKSServiceCreateRequestContainerResourceRequirements
    :param max_concurrent_requests_per_container: The maximum number of
     concurrent requests per container.
    :type max_concurrent_requests_per_container: int
    :param max_queue_wait_ms: Maximum time a request will wait in the queue
     (in milliseconds). After this time, the service will return 503 (Service
     Unavailable)
    :type max_queue_wait_ms: int
    :param namespace: Kubernetes namespace for the service.
    :type namespace: str
    :param scoring_timeout_ms: The scoring timeout in milliseconds.
    :type scoring_timeout_ms: int
    :param auth_enabled: Whether or not authentication is enabled.
    :type auth_enabled: bool
    :param liveness_probe_requirements: The liveness probe requirements.
    :type liveness_probe_requirements:
     ~_restclient.models.AKSServiceCreateRequestLivenessProbeRequirements
    :param aad_auth_enabled: Whether or not AAD authentication is enabled.
    :type aad_auth_enabled: bool
    """

    _validation = {
        'name': {'required': True},
        'compute_type': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'keys': {'key': 'keys', 'type': 'CreateServiceRequestKeys'},
        'image_id': {'key': 'imageId', 'type': 'str'},
        'environment_image_request': {'key': 'environmentImageRequest', 'type': 'CreateServiceRequestEnvironmentImageRequest'},
        'location': {'key': 'location', 'type': 'str'},
        'overwrite': {'key': 'overwrite', 'type': 'bool'},
        'deployed_api_options': {'key': 'deployedApiOptions', 'type': 'CreateServiceRequestDeployedApiOptions'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'traffic_percentile': {'key': 'trafficPercentile', 'type': 'float'},
        'type': {'key': 'type', 'type': 'VariantType'},
        'num_replicas': {'key': 'numReplicas', 'type': 'int'},
        'data_collection': {'key': 'dataCollection', 'type': 'AKSServiceCreateRequestDataCollection'},
        'compute_name': {'key': 'computeName', 'type': 'str'},
        'app_insights_enabled': {'key': 'appInsightsEnabled', 'type': 'bool'},
        'auto_scaler': {'key': 'autoScaler', 'type': 'AKSServiceCreateRequestAutoScaler'},
        'container_resource_requirements': {'key': 'containerResourceRequirements', 'type': 'AKSServiceCreateRequestContainerResourceRequirements'},
        'max_concurrent_requests_per_container': {'key': 'maxConcurrentRequestsPerContainer', 'type': 'int'},
        'max_queue_wait_ms': {'key': 'maxQueueWaitMs', 'type': 'int'},
        'namespace': {'key': 'namespace', 'type': 'str'},
        'scoring_timeout_ms': {'key': 'scoringTimeoutMs', 'type': 'int'},
        'auth_enabled': {'key': 'authEnabled', 'type': 'bool'},
        'liveness_probe_requirements': {'key': 'livenessProbeRequirements', 'type': 'AKSServiceCreateRequestLivenessProbeRequirements'},
        'aad_auth_enabled': {'key': 'aadAuthEnabled', 'type': 'bool'},
    }

    def __init__(self, name, description=None, kv_tags=None, properties=None, keys=None, image_id=None, environment_image_request=None, location=None, overwrite=None, deployed_api_options=None, is_default=None, traffic_percentile=None, type=None, num_replicas=None, data_collection=None, compute_name=None, app_insights_enabled=None, auto_scaler=None, container_resource_requirements=None, max_concurrent_requests_per_container=None, max_queue_wait_ms=None, namespace=None, scoring_timeout_ms=None, auth_enabled=None, liveness_probe_requirements=None, aad_auth_enabled=None):
        super(AKSServiceCreateRequest, self).__init__(name=name, description=description, kv_tags=kv_tags, properties=properties, keys=keys, image_id=image_id, environment_image_request=environment_image_request, location=location, overwrite=overwrite, deployed_api_options=deployed_api_options, is_default=is_default, traffic_percentile=traffic_percentile, type=type)
        self.num_replicas = num_replicas
        self.data_collection = data_collection
        self.compute_name = compute_name
        self.app_insights_enabled = app_insights_enabled
        self.auto_scaler = auto_scaler
        self.container_resource_requirements = container_resource_requirements
        self.max_concurrent_requests_per_container = max_concurrent_requests_per_container
        self.max_queue_wait_ms = max_queue_wait_ms
        self.namespace = namespace
        self.scoring_timeout_ms = scoring_timeout_ms
        self.auth_enabled = auth_enabled
        self.liveness_probe_requirements = liveness_probe_requirements
        self.aad_auth_enabled = aad_auth_enabled
        self.compute_type = 'AKS'
