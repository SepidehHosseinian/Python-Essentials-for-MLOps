# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Asset(Model):
    """The Asset definition.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param id: The Asset Id.
    :type id: str
    :param name: The name of the Asset.
    :type name: str
    :param type: The type of the Asset
    :type type: str
    :param description: The Asset description.
    :type description: str
    :param artifacts: A list of child artifacts.
    :type artifacts: list[~_restclient.models.ArtifactDetails]
    :param kv_tags: The Asset tag dictionary. Tags are mutable.
    :type kv_tags: dict[str, str]
    :param properties: The Asset property dictionary. Properties are
     immutable.
    :type properties: dict[str, str]
    :param runid: The RunId associated with this Asset.
    :type runid: str
    :param meta: A dictionary containing metadata about the Asset.
    :type meta: dict[str, str]
    :ivar created_time: The time the Asset was created in UTC.
    :vartype created_time: datetime
    """

    _validation = {
        'name': {'required': True},
        'created_time': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'artifacts': {'key': 'artifacts', 'type': '[ArtifactDetails]'},
        'kv_tags': {'key': 'kvTags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'runid': {'key': 'runid', 'type': 'str'},
        'meta': {'key': 'meta', 'type': '{str}'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
    }

    def __init__(self, name, id=None, type=None, description=None, artifacts=None, kv_tags=None, properties=None, runid=None, meta=None):
        super(Asset, self).__init__()
        self.id = id
        self.name = name
        self.type = type
        self.description = description
        self.artifacts = artifacts
        self.kv_tags = kv_tags
        self.properties = properties
        self.runid = runid
        self.meta = meta
        self.created_time = None
