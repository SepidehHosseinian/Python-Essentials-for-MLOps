# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DataManagementComputeDefinition(Model):
    """DataManagementComputeDefinition.

    :param compute_name:
    :type compute_name: str
    :param compute_type: Possible values include: 'VirtualMachine',
     'HDInsight', 'BatchAI', 'AmlCompute', 'ComputeInstance', 'Aisc',
     'SynapseSpark', 'Cmk8s', 'Kubernetes'
    :type compute_type: str or ~_restclient.models.ComputeTargetType
    :param service_principal_definition:
    :type service_principal_definition:
     ~_restclient.models.ServicePrincipalDefinition
    :param singularity_settings:
    :type singularity_settings: ~_restclient.models.SingularitySettings
    """

    _attribute_map = {
        'compute_name': {'key': 'computeName', 'type': 'str'},
        'compute_type': {'key': 'computeType', 'type': 'ComputeTargetType'},
        'service_principal_definition': {'key': 'servicePrincipalDefinition', 'type': 'ServicePrincipalDefinition'},
        'singularity_settings': {'key': 'singularitySettings', 'type': 'SingularitySettings'},
    }

    def __init__(self, compute_name=None, compute_type=None, service_principal_definition=None, singularity_settings=None):
        super(DataManagementComputeDefinition, self).__init__()
        self.compute_name = compute_name
        self.compute_type = compute_type
        self.service_principal_definition = service_principal_definition
        self.singularity_settings = singularity_settings
