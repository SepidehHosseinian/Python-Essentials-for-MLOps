# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PrivateEndPointConnections(Model):
    """The properties for Workspace Private Endpoint response.

    :param id: The id of private endpoint connections.
    :type id: str
    :param properties: The properties of the private endpoint.
    :type properties: ~machinelearningservices.models.PrivateEndPointProperties
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'PrivateEndPointProperties'}
    }

    def __init__(self, id=None, properties=None):
        super(PrivateEndPointConnections, self).__init__()
        self.id = id
        self.properties = properties


class PrivateEndPointProperties(Model):
    """The properties for Private endpoint connection.

        :param provisioning_state: The provisioning status of the private endpoint connection.
        :type provisioning_state: str
        :param properties: The private end point details.
        :type properties: ~machinelearningservices.models.PrivateEndPoint
        :param privatelink_service_connection_state: The connection state of the private link.
        :type privatelink_service_connection_state: ~machinelearningservices.models.PrivateLinkServiceConnectionState
        """
    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'private_endpoint': {'key': 'privateEndpoint', 'type': 'PrivateEndPoint'},
        'privatelink_service_connection_state': {'key': 'privateLinkServiceConnectionState',
                                                 'type': 'PrivateLinkServiceConnectionState'}
    }

    def __init__(self, provisioning_state=None, private_endpoint=None, privatelink_service_connection_state=None):
        super(PrivateEndPointProperties, self).__init__()
        self.provisioning_state = provisioning_state
        self.private_endpoint = private_endpoint
        self.privatelink_service_connection_state = privatelink_service_connection_state


class PrivateEndPoint(Model):
    """The Private endpoint property of private endpoint connections.

    :param id: The id of private endpoint.
    :type id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'}
    }

    def __init__(self, id=None):
        super(PrivateEndPoint, self).__init__()
        self.id = id


class PrivateLinkServiceConnectionState(Model):
    """The connection state of the private link

    :param status: The status of  private link connection.
    :type status: str
    :param description: The description of of  private link connection. This may be used for approval-related message.
    :type description: str
    :param actionsRequired: The action on private link connection.
    :type actionsRequired: str
    """
    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'actionsRequired': {'key': 'actionsRequired', 'type': 'str'}
    }

    def __init__(self, status=None, description=None, actionsRequired=None):
        super(PrivateLinkServiceConnectionState, self).__init__()
        self.status = status
        self.description = description
        self.actionsRequired = actionsRequired
