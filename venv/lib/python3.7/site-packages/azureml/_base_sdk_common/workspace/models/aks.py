# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .compute import Compute


class AKS(Compute):
    """A Machine Learning compute based on AKS.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar provisioning_state: The provision state of the cluster. Valid values
     are Unknown, Updating, Provisioning, Succeeded, and Failed. Possible
     values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
     'Succeeded', 'Failed', 'Canceled'
    :vartype provisioning_state: str or
     ~machinelearningservicesswagger.models.ProvisioningState
    :param description: The description of the Machine Learning compute.
    :type description: str
    :ivar created_on: The date and time when the compute was created.
    :vartype created_on: datetime
    :ivar modified_on: The date and time when the compute was last modified.
    :vartype modified_on: datetime
    :param compute_type: Constant filled by server.
    :type compute_type: str
    :param resource_id:
    :type resource_id: str
    :param master_count:
    :type master_count: int
    :param agent_count:
    :type agent_count: int
    :param agent_vm_size:
    :type agent_vm_size: str
    :param service_principal:
    :type service_principal:
     ~machinelearningservicesswagger.models.ServicePrincipalCredentials
    :param system_services:
    :type system_services:
     list[~machinelearningservicesswagger.models.SystemService]
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'created_on': {'readonly': True},
        'modified_on': {'readonly': True},
        'compute_type': {'required': True},
        'master_count': {'minimum': 1},
        'agent_count': {'minimum': 1},
    }

    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'created_on': {'key': 'createdOn', 'type': 'iso-8601'},
        'modified_on': {'key': 'modifiedOn', 'type': 'iso-8601'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'master_count': {'key': 'masterCount', 'type': 'int'},
        'agent_count': {'key': 'agentCount', 'type': 'int'},
        'agent_vm_size': {'key': 'agentVMSize', 'type': 'str'},
        'service_principal': {'key': 'servicePrincipal', 'type': 'ServicePrincipalCredentials'},
        'system_services': {'key': 'systemServices', 'type': '[SystemService]'},
    }

    def __init__(self, description=None, resource_id=None, master_count=None,
                 agent_count=None, agent_vm_size=None, service_principal=None, system_services=None):
        super(AKS, self).__init__(description=description)
        self.resource_id = resource_id
        self.master_count = master_count
        self.agent_count = agent_count
        self.agent_vm_size = agent_vm_size
        self.service_principal = service_principal
        self.system_services = system_services
        self.compute_type = 'AKS'
